# Copyright 2022 HM Revenue & Customs
#

include "frontend.conf"

# This is the main configuration file for the application.
# ~~~~~

appName = payments-stubs

dataProviders {
  ist0 {
    host = "http://todo"
    token = "TODO"
  }

  clone {
    host = "http://todo"
    token = "TODO"
  }

  live {
    host = "http://todo"
    token = "TODO"
  }
}

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

play.http.errorHandler = "AppErrorHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform frontend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.frontend.FrontendModule"

play.filters.enabled += childbenefitstubs.SessionIdFilter

# Disabling this header is necessary for the stub card payment page to render in an iframe
play.filters.headers.frameOptions = null

# Default http client
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"

# Play Modules
# ~~~~
# Additional play modules can be added here

play.modules.enabled += "play.modules.reactivemongo.ReactiveMongoHmrcModule"

#Auth
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"

# Session configuration
# ~~~~~
application.session.httpOnly = false
application.session.secure = false

# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = testOnlyDoNotUseInAppConf.Routes


# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

controllers {

  # 300 is the default, you may need to change this according to your needs
  confidenceLevel = 300

  uk.gov.hmrc.tpspaymentsbackend.controllers.MicroserviceHelloWorldController = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }

}


# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

#this is how we're addressing: uk.gov.hmrc.http.Upstream4xxResponse: POST of 'https://payments-stubs.protected.mdtp:443/payments-rcs-stub/payments/worldpay/b887aeee-3cb8-420d-830c-96cdc43cb605/chunks/3' returned 413. Response body: '{"statusCode":413,"message":"Request Entity Too Large"}'
play.http.parser.maxMemoryBuffer = 16384K

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = true
  jvm = true
  enabled = false
}

# Microservice specific config

auditing {
  enabled = false
  traceRequests = true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

mongodb {
  uri = "mongodb://localhost:27017/payments-stubs"
}

alternative-mongo {
  open-banking-uri = "mongodb://localhost:27017/open-banking"
}

microservice {
  metrics {
    graphite {
      host = graphite
      port = 2003
      prefix = play.${appName}.
      enabled = false
    }
  }

  services {
    auth {
      host = localhost
      port = 8500
    }

    counter {
      protocol = http
      host = localhost
      port = 9839
    }

    barclays {
      protocol = http
      host = localhost
      port = 9975
    }

    payments-stubs-protected {
      protocol = http
      host = localhost
      port = 9126
    }

    payments-processor {
      protocol = http
      host = localhost
      port = 9211
    }

    open-banking {
      protocol = http
      host = localhost
      port = 7800
    }

    pay-api {
      protocol = http
      host = localhost
      port = 9057
      retries = 3
      interval = 300 millis
    }

    auth-login-stub {
      protocol = http
      host = localhost
      port = 9949
    }

    payments-stubs {
      protocol = http
      host = localhost
      port = 9975
    }
  }
}
